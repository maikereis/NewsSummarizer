name: Python Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: username
          MONGO_INITDB_ROOT_PASSWORD: password

    strategy:
      matrix:
        python-version: [3.11]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set environment variables
      run: |
        echo "MONGO_USERNAME=username" >> $GITHUB_ENV
        echo "MONGO_PASSWORD=password" >> $GITHUB_ENV
        echo "MONGO_PORT=27017" >> $GITHUB_ENV

        echo "QDRANT_USE_CLOUD=False" >> $GITHUB_ENV
        echo "QDRANT_DATABASE_HOST=localhost" >> $GITHUB_ENV
        echo "QDRANT_REST_API_PORT=6333" >> $GITHUB_ENV
        echo "QDRANT_GRPC_API_PORT=6334" >> $GITHUB_ENV

        echo "RAG_EMBEDDING_MODEL_ID=sentence-transformers/all-MiniLM-L6-v2" >> $GITHUB_ENV
        echo "RAG_RERANKING_CROSS_ENCODER_MODEL_ID=cross-encoder/ms-marco-MiniLM-L-4-v2" >> $GITHUB_ENV
        echo "RAG_MODEL_DEVICE=cpu" >> $GITHUB_ENV

        echo "DATASET_GENERATOR_MODEL_ID=Qwen/Qwen2.5-1.5B-Instruct-AWQ" >> $GITHUB_ENV
        echo "DATASET_GENERATOR_DEVICE=cpu" >> $GITHUB_ENV


    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install

    - name: Run Ruff (linting)
      run: |
        poetry run ruff check .

    - name: Run tests
      env:
        MONGO_HOST: localhost
        MONGO_PORT: ${{ env.MONGO_PORT }}
        MONGO_USERNAME: ${{ env.MONGO_USERNAME }}
        MONGO_PASSWORD: ${{ env.MONGO_PASSWORD }}
      run: |
        poetry run pytest -v
